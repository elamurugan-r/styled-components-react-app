{
    "env": {
        // 'document' is not defined and 'window' is not defined 
        "browser": true,

        // 'process' is not defined 
        "node": true,

        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended"
    ],

    // Parsing error: Must use import to load ES Module: /media/elamurugan/Development/Reactjs/react-with-styled-components/node_modules/eslint/node_modules/eslint-scope/lib/definition.js
    // require() of ES modules is not supported. require() of /media/elamurugan/Development/Reactjs/react-with-styled-components/node_modules/eslint/node_modules/eslint-scope/lib/definition.js from /media/elamurugan/Development/Reactjs/react-with-styled-components/node_modules/babel-eslint/lib/require-from-eslint.js is an ES module file as it is a .js file whose nearest parent package.json contains "type": "module" which defines all .js files in that package scope as ES modules.
    // Instead rename definition.js to end in .cjs, change the requiring code to use import(), or remove "type": "module" from /media/elamurugan/Development/Reactjs/react-with-styled-components/node_modules/eslint/node_modules/eslint-scope/package.json
    "parser": "@babel/eslint-parser",

    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 13,
        "sourceType": "module",

        // Parsing error: No Babel config file detected for /media/elamurugan/Development/Reactjs/react-with-styled-components/src/reportWebVitals.js. Either disable config file checking with requireConfigFile: false, or configure Babel so that it can find the config files
        "requireConfigFile": false,

        // Parsing error: This experimental syntax requires enabling one of the following parser plugin(s): 'jsx, flow, typescript'
        "babelOptions": {
            "presets": ["@babel/preset-react"]
        }
    },
    "plugins": [
        "react"
    ],
    "rules": {
        "indent": [
            "error",
            2
        ],
        "linebreak-style": [
            "error",
            "unix"
        ],
        "quotes": [
            "error",
            "single"
        ],
        "semi": [
            "error",
            "always"
        ]
    }
}
